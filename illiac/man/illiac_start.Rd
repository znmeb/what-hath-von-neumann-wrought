% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emulator.R
\name{illiac_start}
\alias{illiac_start}
\title{ILLIAC Start}
\usage{
illiac_start(program_counter, right_hand, aq, memory)
}
\arguments{
\item{program_counter}{the address at which to start}

\item{right_hand}{FALSE: left-hand order, TRUE: right-hand order}

\item{aq}{the contents of the AQ register}

\item{memory}{the state of the memory at start time}
}
\value{
a list containing
\itemize{
\item program_counter the address to restart
\item right_hand FALSE: restart at left-hand order,
TRUE: restart at right-hand order
\item aq the contents of the AQ register at stop time
\item memory the state of the memory when it stopped
\item reason for stop (character)}
}
\description{
The emulator itself -given an address, left/right start position
and memory state, emulates the machine until it stops. Yes, if you give it an
unending loop that's what it will do, as would the system it's emulating.

When it stops, you get a list with what you need to start it again and the
contents of memory when it stopped. You also get a decent stop message.
}

